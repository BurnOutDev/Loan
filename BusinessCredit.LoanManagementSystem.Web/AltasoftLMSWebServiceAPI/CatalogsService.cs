//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.0.
// 


namespace CatalogsAPI
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpBinding_CatalogsService", Namespace = "http://tempuri.org/")]
    public partial class CatalogsService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private RequestHeaders requestHeadersValueField;

        private ResponseHeaders responseHeadersValueField;

        private System.Threading.SendOrPostCallback ListCountriesOperationCompleted;

        private System.Threading.SendOrPostCallback ListCurrenciesOperationCompleted;

        private System.Threading.SendOrPostCallback ListDeptsOperationCompleted;

        private System.Threading.SendOrPostCallback ListCalendarDateExceptionsOperationCompleted;

        private System.Threading.SendOrPostCallback ListUsersOperationCompleted;

        private System.Threading.SendOrPostCallback GetCurrencyExchangeRateOfficialOperationCompleted;

        private System.Threading.SendOrPostCallback GetCurrencyExchangeRateCommercialOperationCompleted;

        private System.Threading.SendOrPostCallback ListCurrencyExchangeRatesOfficialOperationCompleted;

        private System.Threading.SendOrPostCallback ListCurrencyExchangeRatesCommercialOperationCompleted;

        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;

        private System.Threading.SendOrPostCallback CheckAccountIdentifierOperationCompleted;

        private System.Threading.SendOrPostCallback CheckBankIdentifierOperationCompleted;

        private System.Threading.SendOrPostCallback GetBankOpenDayOperationCompleted;

        private System.Threading.SendOrPostCallback GetCashierOperationCompleted;

        private System.Threading.SendOrPostCallback ListCashiersOperationCompleted;

        /// <remarks/>
        public CatalogsService()
        {
            this.Url = "http://192.168.8.20:8022/CatalogsService.svc";
        }

        public RequestHeaders RequestHeadersValue
        {
            get
            {
                return this.requestHeadersValueField;
            }
            set
            {
                this.requestHeadersValueField = value;
            }
        }

        public ResponseHeaders ResponseHeadersValue
        {
            get
            {
                return this.responseHeadersValueField;
            }
            set
            {
                this.responseHeadersValueField = value;
            }
        }

        /// <remarks/>
        public event ListCountriesCompletedEventHandler ListCountriesCompleted;

        /// <remarks/>
        public event ListCurrenciesCompletedEventHandler ListCurrenciesCompleted;

        /// <remarks/>
        public event ListDeptsCompletedEventHandler ListDeptsCompleted;

        /// <remarks/>
        public event ListCalendarDateExceptionsCompletedEventHandler ListCalendarDateExceptionsCompleted;

        /// <remarks/>
        public event ListUsersCompletedEventHandler ListUsersCompleted;

        /// <remarks/>
        public event GetCurrencyExchangeRateOfficialCompletedEventHandler GetCurrencyExchangeRateOfficialCompleted;

        /// <remarks/>
        public event GetCurrencyExchangeRateCommercialCompletedEventHandler GetCurrencyExchangeRateCommercialCompleted;

        /// <remarks/>
        public event ListCurrencyExchangeRatesOfficialCompletedEventHandler ListCurrencyExchangeRatesOfficialCompleted;

        /// <remarks/>
        public event ListCurrencyExchangeRatesCommercialCompletedEventHandler ListCurrencyExchangeRatesCommercialCompleted;

        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;

        /// <remarks/>
        public event CheckAccountIdentifierCompletedEventHandler CheckAccountIdentifierCompleted;

        /// <remarks/>
        public event CheckBankIdentifierCompletedEventHandler CheckBankIdentifierCompleted;

        /// <remarks/>
        public event GetBankOpenDayCompletedEventHandler GetBankOpenDayCompleted;

        /// <remarks/>
        public event GetCashierCompletedEventHandler GetCashierCompleted;

        /// <remarks/>
        public event ListCashiersCompletedEventHandler ListCashiersCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListCountries", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
        public Country[] ListCountries()
        {
            object[] results = this.Invoke("ListCountries", new object[0]);
            return ((Country[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListCountries(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListCountries", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public Country[] EndListCountries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Country[])(results[0]));
        }

        /// <remarks/>
        public void ListCountriesAsync()
        {
            this.ListCountriesAsync(null);
        }

        /// <remarks/>
        public void ListCountriesAsync(object userState)
        {
            if ((this.ListCountriesOperationCompleted == null))
            {
                this.ListCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCountriesOperationCompleted);
            }
            this.InvokeAsync("ListCountries", new object[0], this.ListCountriesOperationCompleted, userState);
        }

        private void OnListCountriesOperationCompleted(object arg)
        {
            if ((this.ListCountriesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCountriesCompleted(this, new ListCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListCurrencies", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
        public CcyWithName[] ListCurrencies()
        {
            object[] results = this.Invoke("ListCurrencies", new object[0]);
            return ((CcyWithName[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListCurrencies(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListCurrencies", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public CcyWithName[] EndListCurrencies(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CcyWithName[])(results[0]));
        }

        /// <remarks/>
        public void ListCurrenciesAsync()
        {
            this.ListCurrenciesAsync(null);
        }

        /// <remarks/>
        public void ListCurrenciesAsync(object userState)
        {
            if ((this.ListCurrenciesOperationCompleted == null))
            {
                this.ListCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCurrenciesOperationCompleted);
            }
            this.InvokeAsync("ListCurrencies", new object[0], this.ListCurrenciesOperationCompleted, userState);
        }

        private void OnListCurrenciesOperationCompleted(object arg)
        {
            if ((this.ListCurrenciesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCurrenciesCompleted(this, new ListCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListDepts", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
        public Dept[] ListDepts([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<DeptControlFlags> ControlFlags, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ControlFlagsSpecified)
        {
            object[] results = this.Invoke("ListDepts", new object[] {
                    ControlFlags,
                    ControlFlagsSpecified});
            return ((Dept[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListDepts(System.Nullable<DeptControlFlags> ControlFlags, bool ControlFlagsSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListDepts", new object[] {
                    ControlFlags,
                    ControlFlagsSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public Dept[] EndListDepts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Dept[])(results[0]));
        }

        /// <remarks/>
        public void ListDeptsAsync(System.Nullable<DeptControlFlags> ControlFlags, bool ControlFlagsSpecified)
        {
            this.ListDeptsAsync(ControlFlags, ControlFlagsSpecified, null);
        }

        /// <remarks/>
        public void ListDeptsAsync(System.Nullable<DeptControlFlags> ControlFlags, bool ControlFlagsSpecified, object userState)
        {
            if ((this.ListDeptsOperationCompleted == null))
            {
                this.ListDeptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDeptsOperationCompleted);
            }
            this.InvokeAsync("ListDepts", new object[] {
                    ControlFlags,
                    ControlFlagsSpecified}, this.ListDeptsOperationCompleted, userState);
        }

        private void OnListDeptsOperationCompleted(object arg)
        {
            if ((this.ListDeptsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDeptsCompleted(this, new ListDeptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListCalendarDateExcepti" +
            "ons", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
        public CalendarDate[] ListCalendarDateExceptions()
        {
            object[] results = this.Invoke("ListCalendarDateExceptions", new object[0]);
            return ((CalendarDate[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListCalendarDateExceptions(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListCalendarDateExceptions", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public CalendarDate[] EndListCalendarDateExceptions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CalendarDate[])(results[0]));
        }

        /// <remarks/>
        public void ListCalendarDateExceptionsAsync()
        {
            this.ListCalendarDateExceptionsAsync(null);
        }

        /// <remarks/>
        public void ListCalendarDateExceptionsAsync(object userState)
        {
            if ((this.ListCalendarDateExceptionsOperationCompleted == null))
            {
                this.ListCalendarDateExceptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCalendarDateExceptionsOperationCompleted);
            }
            this.InvokeAsync("ListCalendarDateExceptions", new object[0], this.ListCalendarDateExceptionsOperationCompleted, userState);
        }

        private void OnListCalendarDateExceptionsOperationCompleted(object arg)
        {
            if ((this.ListCalendarDateExceptionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCalendarDateExceptionsCompleted(this, new ListCalendarDateExceptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListUsers", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
        public User[] ListUsers([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListUsersQuery Query)
        {
            object[] results = this.Invoke("ListUsers", new object[] {
                    Query});
            return ((User[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListUsers(ListUsersQuery Query, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListUsers", new object[] {
                    Query}, callback, asyncState);
        }

        /// <remarks/>
        public User[] EndListUsers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }

        /// <remarks/>
        public void ListUsersAsync(ListUsersQuery Query)
        {
            this.ListUsersAsync(Query, null);
        }

        /// <remarks/>
        public void ListUsersAsync(ListUsersQuery Query, object userState)
        {
            if ((this.ListUsersOperationCompleted == null))
            {
                this.ListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUsersOperationCompleted);
            }
            this.InvokeAsync("ListUsers", new object[] {
                    Query}, this.ListUsersOperationCompleted, userState);
        }

        private void OnListUsersOperationCompleted(object arg)
        {
            if ((this.ListUsersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUsersCompleted(this, new ListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/GetCurrencyExchangeRate" +
            "Official", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseElementName = "GetCurrencyExchangeRateResponse", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", IsNullable = true)]
        public CurrencyExchangeRate GetCurrencyExchangeRateOfficial([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string FromCcy, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ToCcy, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<System.DateTime> Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DateSpecified)
        {
            object[] results = this.Invoke("GetCurrencyExchangeRateOfficial", new object[] {
                    FromCcy,
                    ToCcy,
                    Date,
                    DateSpecified});
            return ((CurrencyExchangeRate)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCurrencyExchangeRateOfficial(string FromCcy, string ToCcy, System.Nullable<System.DateTime> Date, bool DateSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCurrencyExchangeRateOfficial", new object[] {
                    FromCcy,
                    ToCcy,
                    Date,
                    DateSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public CurrencyExchangeRate EndGetCurrencyExchangeRateOfficial(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CurrencyExchangeRate)(results[0]));
        }

        /// <remarks/>
        public void GetCurrencyExchangeRateOfficialAsync(string FromCcy, string ToCcy, System.Nullable<System.DateTime> Date, bool DateSpecified)
        {
            this.GetCurrencyExchangeRateOfficialAsync(FromCcy, ToCcy, Date, DateSpecified, null);
        }

        /// <remarks/>
        public void GetCurrencyExchangeRateOfficialAsync(string FromCcy, string ToCcy, System.Nullable<System.DateTime> Date, bool DateSpecified, object userState)
        {
            if ((this.GetCurrencyExchangeRateOfficialOperationCompleted == null))
            {
                this.GetCurrencyExchangeRateOfficialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyExchangeRateOfficialOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyExchangeRateOfficial", new object[] {
                    FromCcy,
                    ToCcy,
                    Date,
                    DateSpecified}, this.GetCurrencyExchangeRateOfficialOperationCompleted, userState);
        }

        private void OnGetCurrencyExchangeRateOfficialOperationCompleted(object arg)
        {
            if ((this.GetCurrencyExchangeRateOfficialCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyExchangeRateOfficialCompleted(this, new GetCurrencyExchangeRateOfficialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/GetCurrencyExchangeRate" +
            "Commercial", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseElementName = "GetCurrencyExchangeRateResponse", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", IsNullable = true)]
        public CurrencyExchangeRate GetCurrencyExchangeRateCommercial([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string FromCcy, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ToCcy, CurrencyRateType RateType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool RateTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<int> CustomerId, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool CustomerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<decimal> Amount, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool AmountSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<int> DeptId, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DeptIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<int> ChannelId, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ChannelIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string CouponCode)
        {
            object[] results = this.Invoke("GetCurrencyExchangeRateCommercial", new object[] {
                    FromCcy,
                    ToCcy,
                    RateType,
                    RateTypeSpecified,
                    CustomerId,
                    CustomerIdSpecified,
                    Amount,
                    AmountSpecified,
                    DeptId,
                    DeptIdSpecified,
                    ChannelId,
                    ChannelIdSpecified,
                    CouponCode});
            return ((CurrencyExchangeRate)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCurrencyExchangeRateCommercial(string FromCcy, string ToCcy, CurrencyRateType RateType, bool RateTypeSpecified, System.Nullable<int> CustomerId, bool CustomerIdSpecified, System.Nullable<decimal> Amount, bool AmountSpecified, System.Nullable<int> DeptId, bool DeptIdSpecified, System.Nullable<int> ChannelId, bool ChannelIdSpecified, string CouponCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCurrencyExchangeRateCommercial", new object[] {
                    FromCcy,
                    ToCcy,
                    RateType,
                    RateTypeSpecified,
                    CustomerId,
                    CustomerIdSpecified,
                    Amount,
                    AmountSpecified,
                    DeptId,
                    DeptIdSpecified,
                    ChannelId,
                    ChannelIdSpecified,
                    CouponCode}, callback, asyncState);
        }

        /// <remarks/>
        public CurrencyExchangeRate EndGetCurrencyExchangeRateCommercial(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CurrencyExchangeRate)(results[0]));
        }

        /// <remarks/>
        public void GetCurrencyExchangeRateCommercialAsync(string FromCcy, string ToCcy, CurrencyRateType RateType, bool RateTypeSpecified, System.Nullable<int> CustomerId, bool CustomerIdSpecified, System.Nullable<decimal> Amount, bool AmountSpecified, System.Nullable<int> DeptId, bool DeptIdSpecified, System.Nullable<int> ChannelId, bool ChannelIdSpecified, string CouponCode)
        {
            this.GetCurrencyExchangeRateCommercialAsync(FromCcy, ToCcy, RateType, RateTypeSpecified, CustomerId, CustomerIdSpecified, Amount, AmountSpecified, DeptId, DeptIdSpecified, ChannelId, ChannelIdSpecified, CouponCode, null);
        }

        /// <remarks/>
        public void GetCurrencyExchangeRateCommercialAsync(string FromCcy, string ToCcy, CurrencyRateType RateType, bool RateTypeSpecified, System.Nullable<int> CustomerId, bool CustomerIdSpecified, System.Nullable<decimal> Amount, bool AmountSpecified, System.Nullable<int> DeptId, bool DeptIdSpecified, System.Nullable<int> ChannelId, bool ChannelIdSpecified, string CouponCode, object userState)
        {
            if ((this.GetCurrencyExchangeRateCommercialOperationCompleted == null))
            {
                this.GetCurrencyExchangeRateCommercialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyExchangeRateCommercialOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyExchangeRateCommercial", new object[] {
                    FromCcy,
                    ToCcy,
                    RateType,
                    RateTypeSpecified,
                    CustomerId,
                    CustomerIdSpecified,
                    Amount,
                    AmountSpecified,
                    DeptId,
                    DeptIdSpecified,
                    ChannelId,
                    ChannelIdSpecified,
                    CouponCode}, this.GetCurrencyExchangeRateCommercialOperationCompleted, userState);
        }

        private void OnGetCurrencyExchangeRateCommercialOperationCompleted(object arg)
        {
            if ((this.GetCurrencyExchangeRateCommercialCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyExchangeRateCommercialCompleted(this, new GetCurrencyExchangeRateCommercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListCurrencyExchangeRat" +
            "esOfficial", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Rate", Namespace = "http://models.altasoft.ge/common/v1.0")]
        public CurrencyExchangeRateWithCcy[] ListCurrencyExchangeRatesOfficial([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<System.DateTime> Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool DateSpecified)
        {
            object[] results = this.Invoke("ListCurrencyExchangeRatesOfficial", new object[] {
                    Date,
                    DateSpecified});
            return ((CurrencyExchangeRateWithCcy[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListCurrencyExchangeRatesOfficial(System.Nullable<System.DateTime> Date, bool DateSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListCurrencyExchangeRatesOfficial", new object[] {
                    Date,
                    DateSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public CurrencyExchangeRateWithCcy[] EndListCurrencyExchangeRatesOfficial(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CurrencyExchangeRateWithCcy[])(results[0]));
        }

        /// <remarks/>
        public void ListCurrencyExchangeRatesOfficialAsync(System.Nullable<System.DateTime> Date, bool DateSpecified)
        {
            this.ListCurrencyExchangeRatesOfficialAsync(Date, DateSpecified, null);
        }

        /// <remarks/>
        public void ListCurrencyExchangeRatesOfficialAsync(System.Nullable<System.DateTime> Date, bool DateSpecified, object userState)
        {
            if ((this.ListCurrencyExchangeRatesOfficialOperationCompleted == null))
            {
                this.ListCurrencyExchangeRatesOfficialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCurrencyExchangeRatesOfficialOperationCompleted);
            }
            this.InvokeAsync("ListCurrencyExchangeRatesOfficial", new object[] {
                    Date,
                    DateSpecified}, this.ListCurrencyExchangeRatesOfficialOperationCompleted, userState);
        }

        private void OnListCurrencyExchangeRatesOfficialOperationCompleted(object arg)
        {
            if ((this.ListCurrencyExchangeRatesOfficialCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCurrencyExchangeRatesOfficialCompleted(this, new ListCurrencyExchangeRatesOfficialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListCurrencyExchangeRat" +
            "esCommercial", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Rate", Namespace = "http://models.altasoft.ge/common/v1.0")]
        public CurrencyExchangeRateCommercial[] ListCurrencyExchangeRatesCommercial()
        {
            object[] results = this.Invoke("ListCurrencyExchangeRatesCommercial", new object[0]);
            return ((CurrencyExchangeRateCommercial[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListCurrencyExchangeRatesCommercial(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListCurrencyExchangeRatesCommercial", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public CurrencyExchangeRateCommercial[] EndListCurrencyExchangeRatesCommercial(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CurrencyExchangeRateCommercial[])(results[0]));
        }

        /// <remarks/>
        public void ListCurrencyExchangeRatesCommercialAsync()
        {
            this.ListCurrencyExchangeRatesCommercialAsync(null);
        }

        /// <remarks/>
        public void ListCurrencyExchangeRatesCommercialAsync(object userState)
        {
            if ((this.ListCurrencyExchangeRatesCommercialOperationCompleted == null))
            {
                this.ListCurrencyExchangeRatesCommercialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCurrencyExchangeRatesCommercialOperationCompleted);
            }
            this.InvokeAsync("ListCurrencyExchangeRatesCommercial", new object[0], this.ListCurrencyExchangeRatesCommercialOperationCompleted, userState);
        }

        private void OnListCurrencyExchangeRatesCommercialOperationCompleted(object arg)
        {
            if ((this.ListCurrencyExchangeRatesCommercialCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCurrencyExchangeRatesCommercialCompleted(this, new ListCurrencyExchangeRatesCommercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/AuthenticateUser", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("User", IsNullable = true)]
        public User AuthenticateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] UserAndDeptId Identification, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Password)
        {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                    Identification,
                    Password});
            return ((User)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAuthenticateUser(UserAndDeptId Identification, string Password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AuthenticateUser", new object[] {
                    Identification,
                    Password}, callback, asyncState);
        }

        /// <remarks/>
        public User EndAuthenticateUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((User)(results[0]));
        }

        /// <remarks/>
        public void AuthenticateUserAsync(UserAndDeptId Identification, string Password)
        {
            this.AuthenticateUserAsync(Identification, Password, null);
        }

        /// <remarks/>
        public void AuthenticateUserAsync(UserAndDeptId Identification, string Password, object userState)
        {
            if ((this.AuthenticateUserOperationCompleted == null))
            {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                    Identification,
                    Password}, this.AuthenticateUserOperationCompleted, userState);
        }

        private void OnAuthenticateUserOperationCompleted(object arg)
        {
            if ((this.AuthenticateUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/CheckAccountIdentifier", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("BankDetails", IsNullable = true)]
        public BankDetails CheckAccountIdentifier([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string AccountId, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string BankId)
        {
            object[] results = this.Invoke("CheckAccountIdentifier", new object[] {
                    AccountId,
                    BankId});
            return ((BankDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckAccountIdentifier(string AccountId, string BankId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckAccountIdentifier", new object[] {
                    AccountId,
                    BankId}, callback, asyncState);
        }

        /// <remarks/>
        public BankDetails EndCheckAccountIdentifier(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BankDetails)(results[0]));
        }

        /// <remarks/>
        public void CheckAccountIdentifierAsync(string AccountId, string BankId)
        {
            this.CheckAccountIdentifierAsync(AccountId, BankId, null);
        }

        /// <remarks/>
        public void CheckAccountIdentifierAsync(string AccountId, string BankId, object userState)
        {
            if ((this.CheckAccountIdentifierOperationCompleted == null))
            {
                this.CheckAccountIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAccountIdentifierOperationCompleted);
            }
            this.InvokeAsync("CheckAccountIdentifier", new object[] {
                    AccountId,
                    BankId}, this.CheckAccountIdentifierOperationCompleted, userState);
        }

        private void OnCheckAccountIdentifierOperationCompleted(object arg)
        {
            if ((this.CheckAccountIdentifierCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAccountIdentifierCompleted(this, new CheckAccountIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/CheckBankIdentifier", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("BankDetails", IsNullable = true)]
        public BankDetails CheckBankIdentifier([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Id)
        {
            object[] results = this.Invoke("CheckBankIdentifier", new object[] {
                    Id});
            return ((BankDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckBankIdentifier(string Id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckBankIdentifier", new object[] {
                    Id}, callback, asyncState);
        }

        /// <remarks/>
        public BankDetails EndCheckBankIdentifier(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BankDetails)(results[0]));
        }

        /// <remarks/>
        public void CheckBankIdentifierAsync(string Id)
        {
            this.CheckBankIdentifierAsync(Id, null);
        }

        /// <remarks/>
        public void CheckBankIdentifierAsync(string Id, object userState)
        {
            if ((this.CheckBankIdentifierOperationCompleted == null))
            {
                this.CheckBankIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBankIdentifierOperationCompleted);
            }
            this.InvokeAsync("CheckBankIdentifier", new object[] {
                    Id}, this.CheckBankIdentifierOperationCompleted, userState);
        }

        private void OnCheckBankIdentifierOperationCompleted(object arg)
        {
            if ((this.CheckBankIdentifierCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBankIdentifierCompleted(this, new CheckBankIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/GetBankOpenDay", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetBankOpenDay(out System.DateTime OpenDay, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool OpenDaySpecified, out System.DateTime WorkDay, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool WorkDaySpecified)
        {
            object[] results = this.Invoke("GetBankOpenDay", new object[0]);
            OpenDay = ((System.DateTime)(results[0]));
            OpenDaySpecified = ((bool)(results[1]));
            WorkDay = ((System.DateTime)(results[2]));
            WorkDaySpecified = ((bool)(results[3]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBankOpenDay(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBankOpenDay", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public void EndGetBankOpenDay(System.IAsyncResult asyncResult, out System.DateTime OpenDay, out bool OpenDaySpecified, out System.DateTime WorkDay, out bool WorkDaySpecified)
        {
            object[] results = this.EndInvoke(asyncResult);
            OpenDay = ((System.DateTime)(results[0]));
            OpenDaySpecified = ((bool)(results[1]));
            WorkDay = ((System.DateTime)(results[2]));
            WorkDaySpecified = ((bool)(results[3]));
        }

        /// <remarks/>
        public void GetBankOpenDayAsync()
        {
            this.GetBankOpenDayAsync(null);
        }

        /// <remarks/>
        public void GetBankOpenDayAsync(object userState)
        {
            if ((this.GetBankOpenDayOperationCompleted == null))
            {
                this.GetBankOpenDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankOpenDayOperationCompleted);
            }
            this.InvokeAsync("GetBankOpenDay", new object[0], this.GetBankOpenDayOperationCompleted, userState);
        }

        private void OnGetBankOpenDayOperationCompleted(object arg)
        {
            if ((this.GetBankOpenDayCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankOpenDayCompleted(this, new GetBankOpenDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/GetCashier", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", IsNullable = true)]
        public Cashier GetCashier([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] UserAndDeptId CashierId)
        {
            object[] results = this.Invoke("GetCashier", new object[] {
                    CashierId});
            return ((Cashier)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCashier(UserAndDeptId CashierId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCashier", new object[] {
                    CashierId}, callback, asyncState);
        }

        /// <remarks/>
        public Cashier EndGetCashier(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Cashier)(results[0]));
        }

        /// <remarks/>
        public void GetCashierAsync(UserAndDeptId CashierId)
        {
            this.GetCashierAsync(CashierId, null);
        }

        /// <remarks/>
        public void GetCashierAsync(UserAndDeptId CashierId, object userState)
        {
            if ((this.GetCashierOperationCompleted == null))
            {
                this.GetCashierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierOperationCompleted);
            }
            this.InvokeAsync("GetCashier", new object[] {
                    CashierId}, this.GetCashierOperationCompleted, userState);
        }

        private void OnGetCashierOperationCompleted(object arg)
        {
            if ((this.GetCashierCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierCompleted(this, new GetCashierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ResponseHeadersValue", Direction = System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeadersValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.altasoft.ge/catalogs/v1.0/CatalogsService/ListCashiers", RequestNamespace = "http://services.altasoft.ge/catalogs/v1.0", ResponseNamespace = "http://services.altasoft.ge/catalogs/v1.0", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
        public Cashier[] ListCashiers([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<int> ActiveCashDeskId, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ActiveCashDeskIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<System.DateTime> ActiveDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ActiveDateSpecified)
        {
            object[] results = this.Invoke("ListCashiers", new object[] {
                    ActiveCashDeskId,
                    ActiveCashDeskIdSpecified,
                    ActiveDate,
                    ActiveDateSpecified});
            return ((Cashier[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListCashiers(System.Nullable<int> ActiveCashDeskId, bool ActiveCashDeskIdSpecified, System.Nullable<System.DateTime> ActiveDate, bool ActiveDateSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListCashiers", new object[] {
                    ActiveCashDeskId,
                    ActiveCashDeskIdSpecified,
                    ActiveDate,
                    ActiveDateSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public Cashier[] EndListCashiers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Cashier[])(results[0]));
        }

        /// <remarks/>
        public void ListCashiersAsync(System.Nullable<int> ActiveCashDeskId, bool ActiveCashDeskIdSpecified, System.Nullable<System.DateTime> ActiveDate, bool ActiveDateSpecified)
        {
            this.ListCashiersAsync(ActiveCashDeskId, ActiveCashDeskIdSpecified, ActiveDate, ActiveDateSpecified, null);
        }

        /// <remarks/>
        public void ListCashiersAsync(System.Nullable<int> ActiveCashDeskId, bool ActiveCashDeskIdSpecified, System.Nullable<System.DateTime> ActiveDate, bool ActiveDateSpecified, object userState)
        {
            if ((this.ListCashiersOperationCompleted == null))
            {
                this.ListCashiersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCashiersOperationCompleted);
            }
            this.InvokeAsync("ListCashiers", new object[] {
                    ActiveCashDeskId,
                    ActiveCashDeskIdSpecified,
                    ActiveDate,
                    ActiveDateSpecified}, this.ListCashiersOperationCompleted, userState);
        }

        private void OnListCashiersOperationCompleted(object arg)
        {
            if ((this.ListCashiersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCashiersCompleted(this, new ListCashiersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://services.altasoft.ge/common/v1.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://services.altasoft.ge/common/v1.0", IsNullable = true)]
    public partial class ResponseHeaders : System.Web.Services.Protocols.SoapHeader
    {

        private string requestIdField;

        private System.DateTime timestampField;

        private System.Nullable<bool> isCopyField;

        private bool isCopyFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string RequestId
        {
            get
            {
                return this.requestIdField;
            }
            set
            {
                this.requestIdField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Timestamp
        {
            get
            {
                return this.timestampField;
            }
            set
            {
                this.timestampField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> IsCopy
        {
            get
            {
                return this.isCopyField;
            }
            set
            {
                this.isCopyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCopySpecified
        {
            get
            {
                return this.isCopyFieldSpecified;
            }
            set
            {
                this.isCopyFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class Cashier
    {

        private int idField;

        private bool idFieldSpecified;

        private System.Nullable<int> activeCashDeskIdField;

        private bool activeCashDeskIdFieldSpecified;

        private System.Nullable<System.DateTime> activeDateField;

        private bool activeDateFieldSpecified;

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ActiveCashDeskId
        {
            get
            {
                return this.activeCashDeskIdField;
            }
            set
            {
                this.activeCashDeskIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveCashDeskIdSpecified
        {
            get
            {
                return this.activeCashDeskIdFieldSpecified;
            }
            set
            {
                this.activeCashDeskIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> ActiveDate
        {
            get
            {
                return this.activeDateField;
            }
            set
            {
                this.activeDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveDateSpecified
        {
            get
            {
                return this.activeDateFieldSpecified;
            }
            set
            {
                this.activeDateFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class BankDetails
    {

        private string bICField;

        private string nameField;

        private string idField;

        private string countryField;

        private IBANUsageType iBANUsageTypeField;

        private bool iBANUsageTypeFieldSpecified;

        private bool isInactiveField;

        private bool isInactiveFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string BIC
        {
            get
            {
                return this.bICField;
            }
            set
            {
                this.bICField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }

        /// <remarks/>
        public IBANUsageType IBANUsageType
        {
            get
            {
                return this.iBANUsageTypeField;
            }
            set
            {
                this.iBANUsageTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IBANUsageTypeSpecified
        {
            get
            {
                return this.iBANUsageTypeFieldSpecified;
            }
            set
            {
                this.iBANUsageTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public bool IsInactive
        {
            get
            {
                return this.isInactiveField;
            }
            set
            {
                this.isInactiveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInactiveSpecified
        {
            get
            {
                return this.isInactiveFieldSpecified;
            }
            set
            {
                this.isInactiveFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public enum IBANUsageType
    {

        /// <remarks/>
        NotUsed,

        /// <remarks/>
        Mandatory,

        /// <remarks/>
        Optional,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class UserIdentification
    {

        private System.Nullable<int> idField;

        private bool idFieldSpecified;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class UserAndDeptId
    {

        private UserIdentification userIdentificationField;

        private System.Nullable<int> deptIdField;

        private bool deptIdFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public UserIdentification UserIdentification
        {
            get
            {
                return this.userIdentificationField;
            }
            set
            {
                this.userIdentificationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> DeptId
        {
            get
            {
                return this.deptIdField;
            }
            set
            {
                this.deptIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeptIdSpecified
        {
            get
            {
                return this.deptIdFieldSpecified;
            }
            set
            {
                this.deptIdFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class CurrencyExchangeRateCommercial
    {

        private string fromCcyField;

        private string toCcyField;

        private int multiplierField;

        private decimal buyField;

        private decimal sellField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string FromCcy
        {
            get
            {
                return this.fromCcyField;
            }
            set
            {
                this.fromCcyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ToCcy
        {
            get
            {
                return this.toCcyField;
            }
            set
            {
                this.toCcyField = value;
            }
        }

        /// <remarks/>
        public int Multiplier
        {
            get
            {
                return this.multiplierField;
            }
            set
            {
                this.multiplierField = value;
            }
        }

        /// <remarks/>
        public decimal Buy
        {
            get
            {
                return this.buyField;
            }
            set
            {
                this.buyField = value;
            }
        }

        /// <remarks/>
        public decimal Sell
        {
            get
            {
                return this.sellField;
            }
            set
            {
                this.sellField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class CurrencyExchangeRateWithCcy
    {

        private string ccyField;

        private CurrencyExchangeRate rateField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Ccy
        {
            get
            {
                return this.ccyField;
            }
            set
            {
                this.ccyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public CurrencyExchangeRate Rate
        {
            get
            {
                return this.rateField;
            }
            set
            {
                this.rateField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class CurrencyExchangeRate
    {

        private decimal valueField;

        private decimal multiplierField;

        private bool isReversedField;

        /// <remarks/>
        public decimal Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public decimal Multiplier
        {
            get
            {
                return this.multiplierField;
            }
            set
            {
                this.multiplierField = value;
            }
        }

        /// <remarks/>
        public bool IsReversed
        {
            get
            {
                return this.isReversedField;
            }
            set
            {
                this.isReversedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class User
    {

        private int idField;

        private int deptIdField;

        private string loginNameField;

        private string displayNameField;

        private System.Nullable<int> customerIdField;

        private bool customerIdFieldSpecified;

        private int groupIdField;

        private bool isActiveField;

        private bool isAuthorizedField;

        private bool isCancelledField;

        private string noteField;

        private System.Nullable<ulong> versionField;

        private bool versionFieldSpecified;

        private AttributesAttribute[] attributesField;

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public int DeptId
        {
            get
            {
                return this.deptIdField;
            }
            set
            {
                this.deptIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string LoginName
        {
            get
            {
                return this.loginNameField;
            }
            set
            {
                this.loginNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                this.displayNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> CustomerId
        {
            get
            {
                return this.customerIdField;
            }
            set
            {
                this.customerIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerIdSpecified
        {
            get
            {
                return this.customerIdFieldSpecified;
            }
            set
            {
                this.customerIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        public int GroupId
        {
            get
            {
                return this.groupIdField;
            }
            set
            {
                this.groupIdField = value;
            }
        }

        /// <remarks/>
        public bool IsActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }

        /// <remarks/>
        public bool IsAuthorized
        {
            get
            {
                return this.isAuthorizedField;
            }
            set
            {
                this.isAuthorizedField = value;
            }
        }

        /// <remarks/>
        public bool IsCancelled
        {
            get
            {
                return this.isCancelledField;
            }
            set
            {
                this.isCancelledField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Note
        {
            get
            {
                return this.noteField;
            }
            set
            {
                this.noteField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<ulong> Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionSpecified
        {
            get
            {
                return this.versionFieldSpecified;
            }
            set
            {
                this.versionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Attribute", Namespace = "http://models.altasoft.ge/common/v1.0", IsNullable = false)]
        public AttributesAttribute[] Attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class AttributesAttribute
    {

        private string keyField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://services.altasoft.ge/catalogs/v1.0")]
    public partial class ListUsersQuery
    {

        private System.Nullable<int> idField;

        private bool idFieldSpecified;

        private System.Nullable<int> deptIdField;

        private bool deptIdFieldSpecified;

        private System.Nullable<bool> isActiveField;

        private bool isActiveFieldSpecified;

        private string userNameField;

        private System.Nullable<int> groupIdField;

        private bool groupIdFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> DeptId
        {
            get
            {
                return this.deptIdField;
            }
            set
            {
                this.deptIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeptIdSpecified
        {
            get
            {
                return this.deptIdFieldSpecified;
            }
            set
            {
                this.deptIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified
        {
            get
            {
                return this.isActiveFieldSpecified;
            }
            set
            {
                this.isActiveFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GroupId
        {
            get
            {
                return this.groupIdField;
            }
            set
            {
                this.groupIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupIdSpecified
        {
            get
            {
                return this.groupIdFieldSpecified;
            }
            set
            {
                this.groupIdFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class CalendarDate
    {

        private System.DateTime dateField;

        private CalendarDateType dateTypeField;

        /// <remarks/>
        public System.DateTime Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }

        /// <remarks/>
        public CalendarDateType DateType
        {
            get
            {
                return this.dateTypeField;
            }
            set
            {
                this.dateTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public enum CalendarDateType
    {

        /// <remarks/>
        Working,

        /// <remarks/>
        HalfWorking,

        /// <remarks/>
        Holiday,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class Dept
    {

        private int idField;

        private int branchIdField;

        private TextBilingual nameField;

        private string bICField;

        private string aliasField;

        private bool isDeptField;

        private bool isActiveField;

        private AttributesAttribute[] attributesField;

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public int BranchId
        {
            get
            {
                return this.branchIdField;
            }
            set
            {
                this.branchIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public TextBilingual Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string BIC
        {
            get
            {
                return this.bICField;
            }
            set
            {
                this.bICField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                this.aliasField = value;
            }
        }

        /// <remarks/>
        public bool IsDept
        {
            get
            {
                return this.isDeptField;
            }
            set
            {
                this.isDeptField = value;
            }
        }

        /// <remarks/>
        public bool IsActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Attribute", Namespace = "http://models.altasoft.ge/common/v1.0", IsNullable = false)]
        public AttributesAttribute[] Attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public partial class TextBilingual
    {

        private string valueGeoField;

        private string valueLatField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ValueGeo
        {
            get
            {
                return this.valueGeoField;
            }
            set
            {
                this.valueGeoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ValueLat
        {
            get
            {
                return this.valueLatField;
            }
            set
            {
                this.valueLatField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class CcyWithName
    {

        private string ccyField;

        private TextBilingual nameField;

        private TextBilingual centNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Ccy
        {
            get
            {
                return this.ccyField;
            }
            set
            {
                this.ccyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public TextBilingual Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public TextBilingual CentName
        {
            get
            {
                return this.centNameField;
            }
            set
            {
                this.centNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/catalogs/v1.0")]
    public partial class Country
    {

        private string code2Field;

        private string code3Field;

        private TextBilingual nameField;

        private ZoneType zoneField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Code2
        {
            get
            {
                return this.code2Field;
            }
            set
            {
                this.code2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Code3
        {
            get
            {
                return this.code3Field;
            }
            set
            {
                this.code3Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public TextBilingual Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public ZoneType Zone
        {
            get
            {
                return this.zoneField;
            }
            set
            {
                this.zoneField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public enum ZoneType
    {

        /// <remarks/>
        Common,

        /// <remarks/>
        Offshore,

        /// <remarks/>
        NonCooperative,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://services.altasoft.ge/common/v1.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://services.altasoft.ge/common/v1.0", IsNullable = true)]
    public partial class RequestHeaders : System.Web.Services.Protocols.SoapHeader
    {

        private string applicationKeyField;

        private string requestIdField;

        private System.Nullable<System.DateTime> timestampField;

        private bool timestampFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ApplicationKey
        {
            get
            {
                return this.applicationKeyField;
            }
            set
            {
                this.applicationKeyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string RequestId
        {
            get
            {
                return this.requestIdField;
            }
            set
            {
                this.requestIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> Timestamp
        {
            get
            {
                return this.timestampField;
            }
            set
            {
                this.timestampField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimestampSpecified
        {
            get
            {
                return this.timestampFieldSpecified;
            }
            set
            {
                this.timestampFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://services.altasoft.ge/catalogs/v1.0")]
    public enum DeptControlFlags
    {

        /// <remarks/>
        Basic = 1,

        /// <remarks/>
        Attributes = 2,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://models.altasoft.ge/common/v1.0")]
    public enum CurrencyRateType
    {

        /// <remarks/>
        Cash,

        /// <remarks/>
        NonCash,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListCountriesCompletedEventHandler(object sender, ListCountriesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Country[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Country[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListCurrenciesCompletedEventHandler(object sender, ListCurrenciesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CcyWithName[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CcyWithName[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListDeptsCompletedEventHandler(object sender, ListDeptsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDeptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListDeptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Dept[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Dept[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListCalendarDateExceptionsCompletedEventHandler(object sender, ListCalendarDateExceptionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCalendarDateExceptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListCalendarDateExceptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CalendarDate[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CalendarDate[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListUsersCompletedEventHandler(object sender, ListUsersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public User[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void GetCurrencyExchangeRateOfficialCompletedEventHandler(object sender, GetCurrencyExchangeRateOfficialCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyExchangeRateOfficialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCurrencyExchangeRateOfficialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CurrencyExchangeRate Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyExchangeRate)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void GetCurrencyExchangeRateCommercialCompletedEventHandler(object sender, GetCurrencyExchangeRateCommercialCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyExchangeRateCommercialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCurrencyExchangeRateCommercialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CurrencyExchangeRate Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyExchangeRate)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListCurrencyExchangeRatesOfficialCompletedEventHandler(object sender, ListCurrencyExchangeRatesOfficialCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCurrencyExchangeRatesOfficialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListCurrencyExchangeRatesOfficialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CurrencyExchangeRateWithCcy[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyExchangeRateWithCcy[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListCurrencyExchangeRatesCommercialCompletedEventHandler(object sender, ListCurrencyExchangeRatesCommercialCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCurrencyExchangeRatesCommercialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListCurrencyExchangeRatesCommercialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CurrencyExchangeRateCommercial[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyExchangeRateCommercial[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public User Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void CheckAccountIdentifierCompletedEventHandler(object sender, CheckAccountIdentifierCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAccountIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckAccountIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BankDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BankDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void CheckBankIdentifierCompletedEventHandler(object sender, CheckBankIdentifierCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBankIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckBankIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BankDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BankDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void GetBankOpenDayCompletedEventHandler(object sender, GetBankOpenDayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankOpenDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBankOpenDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.DateTime OpenDay
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool OpenDaySpecified
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }

        /// <remarks/>
        public System.DateTime WorkDay
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }

        /// <remarks/>
        public bool WorkDaySpecified
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void GetCashierCompletedEventHandler(object sender, GetCashierCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCashierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Cashier Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Cashier)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    public delegate void ListCashiersCompletedEventHandler(object sender, ListCashiersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCashiersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListCashiersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Cashier[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Cashier[])(this.results[0]));
            }
        }
    }
}
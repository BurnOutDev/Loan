@model IEnumerable<BusinessCredit.Domain.Payment>

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrapTable")
@Scripts.Render("~/bundles/tableExport")

<script>
    function actionFormatter(value, row, index) {
        return [
            '<a class="editasd edit ml10" href="javascript:void(0)" title="Edit" style="margin: 5px">',
            'ჯარიმის ცვლილება',
            '</a>',
            '<a class="zeroing edit ml10" href="javascript:void(0)" title="Edit" style="margin: 5px">',
            'ჯარიმის განულება',
            '</a>',
        ].join('');

    }

    window.actionEvents = {
        'click .editasd': function (e, value, row, index) {
            window.location.href = "@Url.Action("PaymentChangePenalty")/?id=" + row.PaymentID + "&branch=" + cbxBranches.selectedIndex;
        },
        'click .zeroing': function (e, value, row, index) {
            window.location.href = "@Url.Action("PaymentZeroizePenalty")/?id=" + row.PaymentID + "&branch=" + cbxBranches.selectedIndex;
        }
    };
</script>

<script>
    function redirectDaily() {
        var ref = "?fromDate=" + displayFromDate.value + "&" + "toDate=" + displayToDate.value + "&" + "branch=" + cbxBranches.selectedIndex;
        localStorage.setItem('branchID', cbxBranches.selectedIndex);
        window.location.href = ref;
    }
</script>


<h2>გადახდები</h2>
<h4>
    <select id="cbxBranches">
        <option value="Central">ცენტრალური</option>
        <option value="Isani">ისანი</option>
        <option value="Okriba">ოკრიბა</option>
        <option value="Lilo">ლილო</option>
        <option value="Eliava">ელიავა</option>
        <option value="Vagzali">ვაგზალი</option>
    </select>

    <input type="date" id="displayFromDate" style="font-size: 19px; height: 28px;" />
    <input type="date" id="displayToDate" style="font-size:19px; height:28px;" />
    <button onclick="redirectDaily()" type="button">Go</button>
</h4>

<table id="table" data-toolbar="#toolbar" data-show-export="true" data-toggle="table" data-search="true" data-pagination="false" data-show-refresh="true" data-show-columns="true" data-url="@Url.Action("PaymentsAdminJson", new { loanId = ViewData["loanId"], fromDate = ViewData["fromDate"], toDate = ViewData["toDate"], branch = ViewData["branch"] })" class="table">
    <thead>
        <tr>
            <th data-field="LoanAccountName">
                სახელი
            </th>
            <th data-field="LoanAccountLastName">
                გვარი
            </th>
            <th data-field="LoanAccountPrivateNumber">
                პირადი ნომერი
            </th>
            <th data-field="LoanAccountAccountID">
                კლიენტის #
            </th>
            <th data-field="LoanLoanID">
                სესხის #
            </th>
            <th data-field="TaxOrderID">
                @Html.DisplayNameFor(model => model.TaxOrderID)
            </th>
            <th data-field="CashCollectorID">
                ინკ. ID
            </th>
            <th data-field="CashCollectorName">
                ინკ. სახელი
            </th>
            <th data-field="CashCollectorLastName">
                ინკ. გვარი
            </th>
            <th data-field="Agreement">
                ხელშეკრულების #
            </th>
            <th data-field="LoanStatus">
                @Html.DisplayNameFor(model => model.LoanStatus)
            </th>
            <th data-field="LoanNotificationLetter">
                გაფრთხ. წერ. თარიღი
            </th>
            <th data-field="ProblemManagerDate">
                პრობ. გადაც. თარიღი
            </th>
            <th data-field="LoanProblemManager">
                პრობ. მენეჯერი
            </th>
            <th data-field="LoanEnforcementDate">
                აღსრ. გადაც. თარიღი
            </th>
            <th data-field="EnforcementAndCourtFee">
                აღსრ. და სასამ. ხარჯი
            </th>
            <th data-field="PMT">
                PMT
            </th>
            <th data-field="CurrentDebt">
                @Html.DisplayNameFor(model => model.CurrentDebt)
            </th>
            <th data-field="WholeDebt">
                @Html.DisplayNameFor(model => model.WholeDebt)
            </th>
            <th data-field="CurrentPayment">
                @Html.DisplayNameFor(model => model.CurrentPayment)
            </th>
            <th data-field="PaymentDate">
                @Html.DisplayNameFor(model => model.PaymentDate)
            </th>
            <th data-field="LoanStartDate">
                Start Date
            </th>
            <th data-field="LoanEndDate">
                End Date
            </th>
            <th data-field="StartingPlannedBalance">
                @Html.DisplayNameFor(model => model.StartingPlannedBalance)
            </th>
            <th data-field="StartingBalance">
                @Html.DisplayNameFor(model => model.StartingBalance)
            </th>
            <th data-field="PlannedBalance">
                @Html.DisplayNameFor(model => model.PlannedBalance)
            </th>
            <th data-field="PayableInterest">
                @Html.DisplayNameFor(model => model.PayableInterest)
            </th>
            <th data-field="PayablePrincipal">
                @Html.DisplayNameFor(model => model.PayablePrincipal)
            </th>
            <th data-field="CurrentOverduePrincipal">
                @Html.DisplayNameFor(model => model.CurrentOverduePrincipal)
            </th>
            <th data-field="CurrentOverdueInterest">
                @Html.DisplayNameFor(model => model.CurrentOverdueInterest)
            </th>
            <th data-field="CurrentPenalty">
                @Html.DisplayNameFor(model => model.CurrentPenalty)
            </th>
            <th data-field="AccruingOverduePrincipal">
                @Html.DisplayNameFor(model => model.AccruingOverduePrincipal)
            </th>
            <th data-field="AccruingOverdueInterest">
                @Html.DisplayNameFor(model => model.AccruingOverdueInterest)
            </th>
            <th data-field="AccruingPenalty">
                @Html.DisplayNameFor(model => model.AccruingPenalty)
            </th>
            <th data-field="AccruingPenaltyPayment">
                @Html.DisplayNameFor(model => model.AccruingPenaltyPayment)
            </th>
            <th data-field="AccruingInterestPayment">
                @Html.DisplayNameFor(model => model.AccruingInterestPayment)
            </th>
            <th data-field="AccruingPrincipalPayment">
                @Html.DisplayNameFor(model => model.AccruingPrincipalPayment)
            </th>
            <th data-field="CurrentInterestPayment">
                @Html.DisplayNameFor(model => model.CurrentInterestPayment)
            </th>
            <th data-field="CurrentPrincipalPayment">
                @Html.DisplayNameFor(model => model.CurrentPrincipalPayment)
            </th>
            <th data-field="PrincipalPrepaymant">
                @Html.DisplayNameFor(model => model.PrincipalPrepaymant)
            </th>
            <th data-field="PaidInterest">
                @Html.DisplayNameFor(model => model.PaidInterest)
            </th>
            <th data-field="PaidPenalty">
                @Html.DisplayNameFor(model => model.PaidPenalty)
            </th>
            <th data-field="PaidPrincipal">
                @Html.DisplayNameFor(model => model.PaidPrincipal)
            </th>
            <th data-field="PrincipalPrepaid">
                @Html.DisplayNameFor(model => model.PrincipalPrepaid)
            </th>
            <th data-field="LoanBalance">
                @Html.DisplayNameFor(model => model.LoanBalance)
            </th>
            <th data-field="ScheduleCatchUp">
                @Html.DisplayNameFor(model => model.ScheduleCatchUp)
            </th>

            <th data-field="EnforcementAndCourtFee">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFee)
            </th>
            <th data-field="EnforcementAndCourtFeePayment">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFeePayment)
            </th>
            <th data-field="EnforcementAndCourtFeeStartingBalance">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFeeStartingBalance)
            </th>
            <th data-field="EnforcementAndCourtFeeEndingBalance">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFeeEndingBalance)
            </th>
            <th data-field="TotalEnforcementAndCourtFee">
                @Html.DisplayNameFor(model => model.TotalEnforcementAndCourtFee)
            </th>
            <th data-field="TotalEnforcementAndCourtFeePayment">
                @Html.DisplayNameFor(model => model.TotalEnforcementAndCourtFeePayment)
            </th>
            <th data-formatter="actionFormatter" data-events="actionEvents">

            </th>
        </tr>
    </thead>
</table>

<script>
    if (localStorage.getItem('branchID') != null) {
        cbxBranches.selectedIndex = localStorage.getItem('branchID');
    }
</script>
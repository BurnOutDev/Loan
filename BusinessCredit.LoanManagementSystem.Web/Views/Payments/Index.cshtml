@model BusinessCredit.Domain.Payment

@{
    ViewBag.Title = "გადახდები";
}

<h2>გადახდები</h2>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrapTable")
@Scripts.Render("~/bundles/tableExport")

<script>
    function actionFormatter(value, row, index) {
        return [
            '<a class="editasd edit ml10" href="javascript:void(0)" title="Edit" style="margin: 5px">',
            'რედაქტირება',
            '</a>',
        ].join('');
    }

    window.actionEvents = {
        'click .editasd': function (e, value, row, index) {
            window.location.href = "@Url.Action("Details")/" + row.PaymentID;
        }
    };

    function DownloadTaxOrders() {
        var url = '../Payments/GenerateTaxOrders';

        var array = $(table).bootstrapTable('getData');
        var paymentIds = [];

        for (var i = 0; i < array.length; i++) {
            paymentIds[i] = array[i].PaymentID;
        }

        //$.ajax({
        //    type: 'GET',
        //    url: '../Payments/GenerateTaxOrders',
        //    data: JSON.stringify(paymentIds),
        //    dataType: 'json',
        //    contentType: 'application/json; charset=utf-8',
        //    success: function (data) {
        //        alert('success');
        //    },
        //    error: function (xhr, ajaxOptions, thrownError) {
        //        alert('error');
        //    }
        //});

        jQuery.ajaxSettings.traditional = true;

        window.location.href = url + '?' + decodeURIComponent($.param({ paymentIds: paymentIds }));

        //return $.get('../Payments/GenerateTaxOrders', { paymentIds: paymentIds });
    }
</script>

<button onclick="DownloadTaxOrders()">Download Tax Orders</button>

<div id="toolbar" class="btn-group">
    <input id="fromDate" type="date" />
    <input id="toDate" type="date" />
    <button type="button" id="dateBtn" class="btn btn-default" onclick="window.location.href = '?fromDate=' + fromDate.value + '&toDate=' + toDate.value">
        <i class="glyphicon glyphicon-arrow-right"></i>
    </button>
</div>
<table id="table" data-toolbar="#toolbar" data-show-export="true" data-toggle="table" data-advanced-search="true" data-search="true" data-pagination="true" data-show-refresh="true" data-show-columns="true" data-url="@Url.Action("IndexJson", new { loanId = ViewData["loanId"], fromDate = ViewData["fromDate"], toDate = ViewData["toDate"] })" class="table">
    <thead>
        <tr>
            <th data-field="LoanAccountName">
                სახელი
            </th>
            <th data-field="LoanAccountLastName">
                გვარი
            </th>
            <th data-field="LoanAccountPrivateNumber">
                პირადი ნომერი
            </th>
            <th data-field="LoanAccountAccountID">
                კლიენტის #
            </th>
            <th data-field="LoanLoanID">
                სესხის #
            </th>
            <th data-field="TaxOrderID">
                @Html.DisplayNameFor(model => model.TaxOrderID)
            </th>
            <th data-field="CashCollectorID">
                ინკ. ID
            </th>
            <th data-field="CashCollectorName">
                ინკ. სახელი
            </th>
            <th data-field="CashCollectorLastName">
                ინკ. გვარი
            </th>
            <th data-field="Agreement">
                ხელშეკრულების #
            </th>
            <th data-field="LoanStatus">
                @Html.DisplayNameFor(model => model.LoanStatus)
            </th>
            <th data-field="LoanLoanNotificationLetter">
                გაფრთხ. წერ. თარიღი
            </th>
            <th data-field="LoanProblemManagerDate">
                პრობ. გადაც. თარიღი
            </th>
            <th data-field="LoanProblemManager">
                პრობ. მენეჯერი
            </th>
            <th data-field="LoanEnforcementDate">
                აღსრ. გადაც. თარიღი
            </th>
            <th data-field="EnforcementAndCourtFee">
                აღსრ. და სასამ. ხარჯი
            </th>
            <th data-field="PMT">
                PMT
            </th>
            <th data-field="CurrentDebt">
                @Html.DisplayNameFor(model => model.CurrentDebt)
            </th>
            <th data-field="WholeDebt">
                @Html.DisplayNameFor(model => model.WholeDebt)
            </th>
            <th data-field="CurrentPayment">
                @Html.DisplayNameFor(model => model.CurrentPayment)
            </th>
            <th data-field="PaymentDate">
                @Html.DisplayNameFor(model => model.PaymentDate)
            </th>
            <th data-field="LoanStartDate">
                Start Date
            </th>
            <th data-field="LoanEndDate">
                End Date
            </th>
            <th data-field="StartingPlannedBalance">
                @Html.DisplayNameFor(model => model.StartingPlannedBalance)
            </th>
            <th data-field="StartingBalance">
                @Html.DisplayNameFor(model => model.StartingBalance)
            </th>
            <th data-field="PlannedBalance">
                @Html.DisplayNameFor(model => model.PlannedBalance)
            </th>
            <th data-field="PayableInterest">
                @Html.DisplayNameFor(model => model.PayableInterest)
            </th>
            <th data-field="PayablePrincipal">
                @Html.DisplayNameFor(model => model.PayablePrincipal)
            </th>
            <th data-field="CurrentOverduePrincipal">
                @Html.DisplayNameFor(model => model.CurrentOverduePrincipal)
            </th>
            <th data-field="CurrentOverdueInterest">
                @Html.DisplayNameFor(model => model.CurrentOverdueInterest)
            </th>
            <th data-field="CurrentPenalty">
                @Html.DisplayNameFor(model => model.CurrentPenalty)
            </th>
            <th data-field="AccruingOverduePrincipal">
                @Html.DisplayNameFor(model => model.AccruingOverduePrincipal)
            </th>
            <th data-field="AccruingOverdueInterest">
                @Html.DisplayNameFor(model => model.AccruingOverdueInterest)
            </th>
            <th data-field="AccruingPenalty">
                @Html.DisplayNameFor(model => model.AccruingPenalty)
            </th>
            <th data-field="AccruingPenaltyPayment">
                @Html.DisplayNameFor(model => model.AccruingPenaltyPayment)
            </th>
            <th data-field="AccruingInterestPayment">
                @Html.DisplayNameFor(model => model.AccruingInterestPayment)
            </th>
            <th data-field="AccruingPrincipalPayment">
                @Html.DisplayNameFor(model => model.AccruingPrincipalPayment)
            </th>
            <th data-field="CurrentInterestPayment">
                @Html.DisplayNameFor(model => model.CurrentInterestPayment)
            </th>
            <th data-field="CurrentPrincipalPayment">
                @Html.DisplayNameFor(model => model.CurrentPrincipalPayment)
            </th>
            <th data-field="PrincipalPrepaymant">
                @Html.DisplayNameFor(model => model.PrincipalPrepaymant)
            </th>
            <th data-field="PaidInterest">
                @Html.DisplayNameFor(model => model.PaidInterest)
            </th>
            <th data-field="PaidPenalty">
                @Html.DisplayNameFor(model => model.PaidPenalty)
            </th>
            <th data-field="PaidPrincipal">
                @Html.DisplayNameFor(model => model.PaidPrincipal)
            </th>
            <th data-field="PrincipalPrepaid">
                @Html.DisplayNameFor(model => model.PrincipalPrepaid)
            </th>
            <th data-field="LoanBalance">
                @Html.DisplayNameFor(model => model.LoanBalance)
            </th>
            <th data-field="ScheduleCatchUp">
                @Html.DisplayNameFor(model => model.ScheduleCatchUp)
            </th>
            <th data-field="EnforcementAndCourtFee">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFee)
            </th>
            <th data-field="EnforcementAndCourtFeePayment">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFeePayment)
            </th>
            <th data-field="EnforcementAndCourtFeeStartingBalance">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFeeStartingBalance)
            </th>
            <th data-field="EnforcementAndCourtFeeEndingBalance">
                @Html.DisplayNameFor(model => model.EnforcementAndCourtFeeEndingBalance)
            </th>
            <th data-field="TotalEnforcementAndCourtFee">
                @Html.DisplayNameFor(model => model.TotalEnforcementAndCourtFee)
            </th>
            <th data-field="TotalEnforcementAndCourtFeePayment">
                @Html.DisplayNameFor(model => model.TotalEnforcementAndCourtFeePayment)
            </th>
            <th data-formatter="actionFormatter" data-events="actionEvents">

            </th>
        </tr>
    </thead>
</table>
